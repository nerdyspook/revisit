{"ast":null,"code":"import { Response } from \"miragejs\";\nimport dayjs from \"dayjs\";\nimport jwt_decode from \"jwt-decode\";\nexport const requiresAuth = function (request) {\n  const encodedToken = request.requestHeaders.authorization;\n  const decodedToken = jwt_decode(encodedToken, process.env.REACT_APP_JWT_SECRET);\n\n  if (decodedToken) {\n    const user = this.db.users.findBy({\n      email: decodedToken.email\n    });\n    return user;\n  }\n\n  return new Response(401, {}, {\n    errors: [\"The token is invalid. Unauthorized access error.\"]\n  });\n};\nexport const formatDate = () => dayjs().format(\"YYYY-MM-DDTHH:mm:ssZ\");","map":{"version":3,"sources":["C:/Users/susan/OneDrive/Documents/GitHub/revisit/src/backend/utils/authUtils.js"],"names":["Response","dayjs","jwt_decode","requiresAuth","request","encodedToken","requestHeaders","authorization","decodedToken","process","env","REACT_APP_JWT_SECRET","user","db","users","findBy","email","errors","formatDate","format"],"mappings":"AAAA,SAASA,QAAT,QAAyB,UAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG,UAAUC,OAAV,EAAmB;AAC3C,QAAMC,YAAY,GAAGD,OAAO,CAACE,cAAR,CAAuBC,aAA5C;AACA,QAAMC,YAAY,GAAGN,UAAU,CAC3BG,YAD2B,EAE3BI,OAAO,CAACC,GAAR,CAAYC,oBAFe,CAA/B;;AAIA,MAAIH,YAAJ,EAAkB;AACd,UAAMI,IAAI,GAAG,KAAKC,EAAL,CAAQC,KAAR,CAAcC,MAAd,CAAqB;AAAEC,MAAAA,KAAK,EAAER,YAAY,CAACQ;AAAtB,KAArB,CAAb;AACA,WAAOJ,IAAP;AACH;;AACD,SAAO,IAAIZ,QAAJ,CACH,GADG,EAEH,EAFG,EAGH;AAAEiB,IAAAA,MAAM,EAAE,CAAC,kDAAD;AAAV,GAHG,CAAP;AAKH,CAfM;AAiBP,OAAO,MAAMC,UAAU,GAAG,MAAMjB,KAAK,GAAGkB,MAAR,CAAe,sBAAf,CAAzB","sourcesContent":["import { Response } from \"miragejs\";\r\nimport dayjs from \"dayjs\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const requiresAuth = function (request) {\r\n    const encodedToken = request.requestHeaders.authorization;\r\n    const decodedToken = jwt_decode(\r\n        encodedToken,\r\n        process.env.REACT_APP_JWT_SECRET\r\n    );\r\n    if (decodedToken) {\r\n        const user = this.db.users.findBy({ email: decodedToken.email });\r\n        return user;\r\n    }\r\n    return new Response(\r\n        401,\r\n        {},\r\n        { errors: [\"The token is invalid. Unauthorized access error.\"] }\r\n    );\r\n};\r\n\r\nexport const formatDate = () => dayjs().format(\"YYYY-MM-DDTHH:mm:ssZ\");\r\n"]},"metadata":{},"sourceType":"module"}